{"version":3,"sources":["webpack:///./validators.js","webpack:///./checkers.js","webpack:///./index.js"],"names":["validation","element","classList","remove","add","unvalidation","loginDescr","document","querySelector","passDescr","secondPassDescr","okBtn","regBtn","modal","form","logInInput","elements","logIn","passInput","password","passwordRepeatInput","passwordRepeat","togglePassBth","querySelectorAll","disabled","handleChange","e","target","name","value","length","checkPass","firstPass","secondPass","contains","show_hide_password","input","getAttribute","setAttribute","addEventListener","preventDefault","forEach","btn","alert"],"mappings":"qKAAaA,EAAa,SAAAC,GACxBA,EAAQC,UAAUC,OAAO,WACzBF,EAAQC,UAAUE,IAAI,UAEXC,EAAe,SAAAJ,GAC1BA,EAAQC,UAAUC,OAAO,SACzBF,EAAQC,UAAUE,IAAI,YCJlBE,EAAaC,SAASC,cAAc,eACpCC,EAAYF,SAASC,cAAc,cACnCE,EAAkBH,SAASC,cAAc,oBACzCG,EAAQJ,SAASC,cAAc,UCF/BI,EAASL,SAASC,cAAc,WAChCK,EAAQN,SAASC,cAAc,UAC/BM,EAAOP,SAASC,cAAc,gBAC9BO,EAAaD,EAAKE,SAASC,MAC3BC,EAAYJ,EAAKE,SAASG,SAC1BC,EAAsBN,EAAKE,SAASK,eACpCV,EAAQG,EAAKE,SAASL,MACtBW,EAAgBf,SAASgB,iBAAiB,qBAEhDZ,EAAMa,UAAW,EAEjB,IAKMC,EAAe,SAAAC,GACnB,OAAQA,EAAEC,OAAOC,MACf,IAAK,SDdiBC,ECeTH,EAAEC,OAAOE,ODdlBC,OAAS,GAAKD,EAAMC,OAAS,GAC/B9B,EAAWM,GACXD,EAAaC,GCab,MACF,IAAK,YDXgB,SAAAuB,GACvBA,EAAMC,OAAS,GAAKD,EAAMC,OAAS,GAC/B9B,EAAWS,GACXJ,EAAaI,GCSbsB,CAAUL,EAAEC,OAAOE,OACnB,MACF,IAAK,iBDRuBG,ECSVN,EAAEC,OAAOE,MDTYI,ECSLf,EAAUW,MDR9CG,IAAcC,EACVjC,EAAWU,GACXL,EAAaK,GAHY,IAACsB,EAAWC,EAZjBJ,EAoBtBvB,EAAWJ,UAAUgC,SAAS,UAC9BzB,EAAUP,UAAUgC,SAAS,UAC7BxB,EAAgBR,UAAUgC,SAAS,SAEnCvB,EAAMa,UAAW,EAEjBb,EAAMa,UAAW,GCQrB,SAASW,EAAT,GAAwC,IAAVR,EAAU,EAAVA,OACxBS,EAAQT,EAAOzB,UAAUgC,SAAS,wBAClCd,EACAF,EAC8B,YAA9BkB,EAAMC,aAAa,SACrBV,EAAOzB,UAAUE,IAAI,QACrBgC,EAAME,aAAa,OAAQ,UAE3BX,EAAOzB,UAAUC,OAAO,QACxBiC,EAAME,aAAa,OAAQ,aAI/B1B,EAAO2B,iBAAiB,SAxCN,SAAAb,GAChBA,EAAEc,iBACF3B,EAAMX,UAAUE,IAAI,cAuCtBW,EAAWwB,iBAAiB,QAASd,GACrCP,EAAUqB,iBAAiB,QAASd,GACpCL,EAAoBmB,iBAAiB,QAASd,GAC9CH,EAAcmB,SAAQ,SAAAC,GAAG,OAAIA,EAAIH,iBAAiB,QAASJ,MAC3DxB,EAAM4B,iBAAiB,SAvBN,SAAAb,GACfA,EAAEc,iBACFG,MAAM,kB","file":"main.1e6140390c3802bbf1f2.js","sourcesContent":["export const validation = element => {\r\n  element.classList.remove('invalid');\r\n  element.classList.add('valid');\r\n};\r\nexport const unvalidation = element => {\r\n  element.classList.remove('valid');\r\n  element.classList.add('invalid');\r\n};\r\n","import { validation, unvalidation } from './validators';\r\n\r\nconst loginDescr = document.querySelector('.loginDescr');\r\nconst passDescr = document.querySelector('.passDescr');\r\nconst secondPassDescr = document.querySelector('.secondPassDescr');\r\nconst okBtn = document.querySelector('.okBtn');\r\n\r\nexport const checkLogin = value => {\r\n  value.length > 4 && value.length < 11\r\n    ? validation(loginDescr)\r\n    : unvalidation(loginDescr);\r\n};\r\n\r\nexport const checkPass = value => {\r\n  value.length > 7 && value.length < 17\r\n    ? validation(passDescr)\r\n    : unvalidation(passDescr);\r\n};\r\n\r\nexport const checkSecondPass = (firstPass, secondPass) => {\r\n  firstPass === secondPass\r\n    ? validation(secondPassDescr)\r\n    : unvalidation(secondPassDescr);\r\n};\r\n\r\nexport const checkOkBtn = () => {\r\n  if (\r\n    loginDescr.classList.contains('valid') &&\r\n    passDescr.classList.contains('valid') &&\r\n    secondPassDescr.classList.contains('valid')\r\n  ) {\r\n    okBtn.disabled = false;\r\n  } else {\r\n    okBtn.disabled = true;\r\n  }\r\n};\r\n","import './styles.css';\nimport { checkLogin, checkPass, checkSecondPass, checkOkBtn } from './checkers';\n\nconst regBtn = document.querySelector('.regBtn');\nconst modal = document.querySelector('.modal');\nconst form = document.querySelector('.modal__form');\nconst logInInput = form.elements.logIn;\nconst passInput = form.elements.password;\nconst passwordRepeatInput = form.elements.passwordRepeat;\nconst okBtn = form.elements.okBtn;\nconst togglePassBth = document.querySelectorAll('.password-control');\n\nokBtn.disabled = true;\n\nconst openModal = e => {\n  e.preventDefault();\n  modal.classList.add('is-open');\n};\n\nconst handleChange = e => {\n  switch (e.target.name) {\n    case 'logIn':\n      checkLogin(e.target.value);\n      break;\n    case 'password':\n      checkPass(e.target.value);\n      break;\n    case 'passwordRepeat':\n      checkSecondPass(e.target.value, passInput.value);\n      break;\n    default:\n      break;\n  }\n  checkOkBtn();\n};\n\nconst handleOk = e => {\n  e.preventDefault();\n  alert('ТАДААААМ!');\n};\n\nfunction show_hide_password({ target }) {\n  let input = target.classList.contains('togglePasswordRepeat')\n    ? passwordRepeatInput\n    : passInput;\n  if (input.getAttribute('type') == 'password') {\n    target.classList.add('view');\n    input.setAttribute('type', 'text');\n  } else {\n    target.classList.remove('view');\n    input.setAttribute('type', 'password');\n  }\n}\n\nregBtn.addEventListener('click', openModal);\nlogInInput.addEventListener('input', handleChange);\npassInput.addEventListener('input', handleChange);\npasswordRepeatInput.addEventListener('input', handleChange);\ntogglePassBth.forEach(btn => btn.addEventListener('click', show_hide_password));\nokBtn.addEventListener('click', handleOk);\n"],"sourceRoot":""}